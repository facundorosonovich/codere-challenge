# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

parameters:
  base_url:
    type: string
    default: ''
  build_and_analysis:
    type: boolean
    default: true
  continent:
    type: string
    default: 'eu'

orbs:
  git-shallow-clone: guitarrapc/git-shallow-clone@2.6.0

executors:
  pw-focal-development:
    docker:
      - image: mcr.microsoft.com/playwright:v1.36.2-focal
    working_directory: ~/codere/project

commands:
  shallow-clone:
    description: Shallow clone of the repository
    steps:
      - git-shallow-clone/checkout_advanced:
          clone_options: '--depth 1 --filter=tree:0 --branch $CIRCLE_BRANCH'
          fetch_options: --depth 1
          tag_fetch_options: --no-tags


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    executor: pw-focal-development
    resource_class: small
    steps:
      - shallow-clone
      - restore_cache:
          name: Restoring "node_modules" from cache
          keys:
            - v8-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v8-deps-{{ .Branch }}-
            - v8-deps-
      - run:
          name: Installing dependencies
          command: yarn install --frozen-lockfile --prefer-offline --cache-folder ~/.cache/yarn
      - run:
          name: Export playwright version
          command: npx playwright --version
      - save_cache:
          name: Saving "node_modules" and Yarn cache
          key: v8-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/backmarket
          paths:
            - project

  run-tests:
    executor: pw-focal-development
    resource_class: << parameters.resource_class >>
    parameters:
      browser:
        type: string
      testing_environment:
        type: string
        default: ''
      additional_commandline_argument:
        type: string
        default: ''
      resource_class:
        type: string
        default: 'medium'

    environment:
      TESTING_ENVIRONMENT: << parameters.testing_environment >>
      BROWSER: << parameters.browser >>
      BASE_URL: << pipeline.parameters.base_url >>
      ADDITIONAL_COMMANDLINE_ARGUMENT: << parameters.additional_commandline_argument >>
    steps:
      - attach_workspace:
          at: ~/backmarket
      - run:
          name: Running the tests
          command: npx playwright test --project=$BROWSER $ADDITIONAL_COMMANDLINE_ARGUMENT
      - store_artifacts:
          path: playwright-report

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  run-demo-test:
    jobs:
      - build
      - run-tests:
          requires:
            - build
          browser: chromium
          testing_environment: prod
          resource_class: medium
